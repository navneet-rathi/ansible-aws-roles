---
# Variables that can provide as extra vars
VPC_REGION: us-east-1 # N.Virginia
ELB_NAME: "test"
ELB_SUBNET_ID: []
ELB_PURGE_SUBNETS: no
ELB_CROSS_AZ_LOAD_BALANCING: yes
ELB_PING_PROTOCOL: tcp
ELB_PING_PORT: 80
ELB_RESPONSE_TIMEOUT: 5
ELB_INTERVAL: 30
ELB_UNHEALTHY_THRESHOLD: 2
ELB_HEALTHY_THRESHOLD: 10
ELB_CONNECTION_DRAINING_TIMEOUT: 60
ELB_SECURITY_GROUP_NAME: "test"
ELB_STICKINESS_TYPE: "loadbalancer"
ELB_STICKINESS_ENABLED: no
ELB_STICKINESS_EXPIRATION: 150
ELB_LISTENERS:
  - protocol: http
    load_balancer_port: 80
    instance_protocol: http
    instance_port: 80

# Use inside the tasks
vpc_region: "{{ VPC_REGION }}"
elb_name: "{{ ELB_NAME }}"
elb_subnet_id: "{{ ELB_SUBNET_ID }}"
elb_purge_subnets: "{{ ELB_PURGE_SUBNETS }}"
elb_cross_az_load_balancing: "{{ ELB_CROSS_AZ_LOAD_BALANCING }}"
elb_connection_draining_timeout: "{{ ELB_CONNECTION_DRAINING_TIMEOUT }}" 
elb_security_group_name: "{{ ELB_SECURITY_GROUP_NAME }}"
elb_listeners: "{{ ELB_LISTENERS }}"
elb_stickiness:
  type: "{{ ELB_STICKINESS_TYPE }}"
  enabled: "{{ ELB_STICKINESS_ENABLED }}"
  expiration: "{{ ELB_STICKINESS_EXPIRATION }}"
elb_health_check:
  ping_protocol: "{{ ELB_PING_PROTOCOL }}"
  ping_port: "{{ ELB_PING_PORT }}"
  response_timeout: "{{ ELB_RESPONSE_TIMEOUT }}"
  interval: "{{ ELB_INTERVAL }}"
  unhealthy_threshold: "{{ ELB_UNHEALTHY_THRESHOLD }}"
  healthy_threshold: "{{ ELB_HEALTHY_THRESHOLD }}"